name: Test and deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:

  build:

    runs-on: ubuntu-latest

    env: 
      DOCKER_IMAGE_TAG: '${{ github.event.repository.name }}:${{ github.run_id }}'
      DOCKER_CONTAINER_NAME: '${{ github.event.repository.name }}_${{ github.run_id }}'

    steps:
    - uses: actions/checkout@v3
    - name: Dump GitHub context
      env:
        DOCKER_IMAGE_TAG: '${{ github.repository }}:${{ github.run_id }}'
      run: |
        echo '${{ toJSON(github) }}'
        echo $DOCKER_IMAGE_TAG
    - name: Set up Python 3.7
      uses: actions/setup-python@v3
      with:
        python-version: "3.7"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        #pip install pytest
        #if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip3 install -r requirements.txt
    - name: Create Google API key
      run: |
        mkdir key
        echo '${{secrets.GOOGLE_KEY}}' > key/civil-hash.json
    - name: Run tests
      run: python -m pytest -v
      env: 
        TELEGRAM_BOT_TOKEN: ${{secrets.TELEGRAM_BOT_TOKEN}}
        TELEGRAM_CHANNEL_ID: ${{secrets.TELEGRAM_CHANNEL_TEST_ID}}
        GOOGLE_CALENDAR_ID: ${{secrets.GOOGLE_CALENDAR_ID}}      
    - name: Build the Docker image and test run
      run: |
        docker build . \
              --file Dockerfile \
              --tag ${DOCKER_IMAGE_TAG,,}
        docker run \
              -d --rm \
              --name ${DOCKER_CONTAINER_NAME,,} \
              --env PORT=5000 \
              #--env TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN \
              --env TELEGRAM_CHANNEL_ID=$TELEGRAM_CHANNEL_ID \
              --env GOOGLE_CALENDAR_ID=$GOOGLE_CALENDAR_ID \
              ${DOCKER_IMAGE_TAG,,}
        exit $( \
          docker exec \
                ${DOCKER_CONTAINER_NAME,,} \
                bash -c 'apt-get update && apt-get install -y curl && curl http://localhost:5000/' | \
          grep -c Error
        )
      env: 
        TELEGRAM_BOT_TOKEN: ${{secrets.TELEGRAM_BOT_TOKEN}}
        TELEGRAM_CHANNEL_ID: ${{secrets.TELEGRAM_CHANNEL_TEST_ID}}
        GOOGLE_CALENDAR_ID: ${{secrets.GOOGLE_CALENDAR_ID}}      
    - name: Deploy
      if: github.ref == 'refs/heads/main' || 
          github.ref == 'refs/heads/develop'
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: ${{ github.ref == 'refs/heads/main' && 'tbgc' || 'tbgc-dev' }}
        heroku_email: ${{secrets.HEROKU_EMAIL}}
        usedocker: true
      env:
        HD_TELEGRAM_BOT_TOKEN: ${{secrets.TELEGRAM_BOT_TOKEN}}
        HD_TELEGRAM_CHANNEL_ID: ${{ github.ref == 'refs/heads/main' && secrets.TELEGRAM_CHANNEL_ID || secrets.TELEGRAM_CHANNEL_DEV_ID }}
        HD_GOOGLE_CALENDAR_ID: ${{secrets.GOOGLE_CALENDAR_ID}}
    - name: Clear all
      if: always()
      run: |
        rm key/civil-hash.json || true
        docker stop ${DOCKER_CONTAINER_NAME,,} || true
